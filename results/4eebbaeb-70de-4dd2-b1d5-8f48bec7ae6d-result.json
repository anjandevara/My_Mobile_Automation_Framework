{"name": "test_verify_the_maximum_and_minimum_characters_that_can_be_sent_through_a_message[Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis disa p-false]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'true' == 'false'\n  - false\n  + true", "trace": "request = <FixtureRequest for <Function test_verify_the_maximum_and_minimum_characters_that_can_be_sent_through_a_message[Lorem ...adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis disa p-false]>>\n_pytest_bdd_example = {'button_state': 'false', 'characters': 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis disa p'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\nvenv/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\nvenv/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\nvenv/lib/python3.10/site-packages/_pytest/fixtures.py:890: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbutton_state = 'false'\n\n    @then(parsers.parse('04 Verify the {button_state}'))\n    def verify_the_button_state(button_state):\n        \"\"\"04 Verify the <button_state>.\"\"\"\n>       assert messages_screen.send_button_state() == button_state\nE       AssertionError: assert 'true' == 'false'\nE         - false\nE         + true\n\nFeatures/Steps/Max_Min_Characters/test_01_sender.py:63: AssertionError"}, "description": "max_min_characters.feature: 02 Verify the maximum and minimum characters that can be sent through a message", "parameters": [{"name": "_pytest_bdd_example", "value": "{'characters': 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis disa p', 'button_state': 'false'}"}], "start": 1669806429178, "stop": 1669806433600, "uuid": "0e1f2462-dcbb-4b9c-a47f-2159d27a13ef", "historyId": "e3264c3c63bde4d553f62ab9a4e6b5bd", "testCaseId": "83b4bd73902ac6df21682985e5b5cffa", "fullName": "Features.Steps.Max_Min_Characters.test_01_sender#test_verify_the_maximum_and_minimum_characters_that_can_be_sent_through_a_message", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "Features.Steps.Max_Min_Characters"}, {"name": "suite", "value": "test_01_sender"}, {"name": "host", "value": "IM-LP-1845.local"}, {"name": "thread", "value": "31528-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Features.Steps.Max_Min_Characters.test_01_sender"}]}